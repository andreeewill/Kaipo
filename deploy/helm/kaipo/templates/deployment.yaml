apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { include "kaipo.fullname" . } }
  labels:
    app.kubernetes.io/name: { { include "kaipo.name" . } }
    app.kubernetes.io/instance: { { .Release.Name } }
    app.kubernetes.io/version: { { .Chart.AppVersion } }
    app.kubernetes.io/managed-by: { { .Release.Service } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app.kubernetes.io/name: { { include "kaipo.name" . } }
      app.kubernetes.io/instance: { { .Release.Name } }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: { { include "kaipo.name" . } }
        app.kubernetes.io/instance: { { .Release.Name } }
    spec:
      securityContext: { { - toYaml .Values.podSecurityContext | nindent 8 } }
      containers:
        - name: { { include "kaipo.name" . } }
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: { { .Values.image.pullPolicy } }
          ports:
            - containerPort: { { .Values.container.port } }
              name: http
          env: { { - toYaml .Values.container.env | nindent 12 } }
          securityContext: { { - toYaml .Values.securityContext | nindent 12 } }
          livenessProbe:
            httpGet:
              path: { { .Values.probes.liveness.path } }
              port: http
            initialDelaySeconds:
              { { .Values.probes.liveness.initialDelaySeconds } }
            periodSeconds: { { .Values.probes.liveness.periodSeconds } }
          readinessProbe:
            httpGet:
              path: { { .Values.probes.readiness.path } }
              port: http
            initialDelaySeconds:
              { { .Values.probes.readiness.initialDelaySeconds } }
            periodSeconds: { { .Values.probes.readiness.periodSeconds } }
          resources: { { - toYaml .Values.resources | nindent 12 } }
